name: Build Release Pipeline - $(Build.DefinitionName) - $(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - template: ../../recipes/common/Variables.yml

stages:

  - stage: Training
    displayName: Train the model
    jobs:
      - template: ../../recipes/ci/Train.yml
        parameters:
          rm_service_connection: '${{ variables.RM_SERVICE_CONNECTION }}'
          workspace: '${{ variables.WORKSPACE }}'
          resource_group: '${{ variables.RESOURCE_GROUP }}'
          model_name: '${{ variables.RISK_MODEL_NAME }}'
          aml_compute_cluster: '${{ variables.AML_COMPUTE_CLUSTER }}'
          dataset_name: '${{ variables.RISK_MODEL_DATASET_NAME }}'

  - stage: RegisterModel
    displayName: Register the model
    jobs:
      # Perform an empty deploy job for approval (This is the way in Azure Devops)
      - deployment: Approval
        displayName: Approval for model registration
        environment: 'Test'

      - template: ../../recipes/ci/RegisterModel.yml
        parameters:
          rm-service-connection: ${{ variables['RM_SERVICE_CONNECTION'] }}
          workspace-name: ${{ variables['WORKSPACE'] }}
          resource-group: ${{ variables['RESOURCE_GROUP'] }}
          name: ${{ variables['RISK_MODEL_NAME'] }}'
          run-metadata-artifact: 'run-metadata'
          run-metadata-file: $(Pipeline.Workspace)/run-metadata/run.json
          experiment-name: ${{ variables['RISK_MODEL_NAME'] }}-exp

  - stage: DeployToTest
    displayName: Deploy model to Test (Azure Container Instance)
    jobs:
      - template: ../../recipes/cd/Deploy.yml
        parameters:
          rm-service-connection: '${{ variables.RM_SERVICE_CONNECTION }}'
          name: '${{ variables.RISK_MODEL_ACI_SERVICE_NAME }}'
          workspace-name: '${{ variables.WORKSPACE }}'
          resource-group: '${{ variables.RESOURCE_GROUP }}'
          compute-type: aci
          model-metadata-file: $(Pipeline.Workspace)/model-metadata/model.json
          ic: $(Build.SourcesDirectory)/models/risk-model/score/inference_config.yml
          dc: $(Build.SourcesDirectory)/models/risk-model/score/aci_deployment_config.yml

  - stage: DeployToProd
    displayName: Deploy to Prod with approval
    jobs:
      # Perform an empty deploy job for approval (This is the way in Azure Devops)
      - deployment: Approval
        displayName: Approval for rolling out to production
        environment: 'Prod'

      - template: ../../recipes/cd/Deploy.yml
        parameters:
          rm-service-connection: '${{ variables.RM_SERVICE_CONNECTION }}'
          name: '${{ variables.RISK_MODEL_AKS_SERVICE_NAME }}'
          workspace-name: '${{ variables.WORKSPACE }}'
          resource-group: '${{ variables.RESOURCE_GROUP }}'
          compute-type: aks
          model-metadata-file: $(Pipeline.Workspace)/model-metadata/model.json
          compute-target: ${{ variables.AKS_CLUSTER }}
          ic: $(Build.SourcesDirectory)/models/risk-model/score/inference_config.yml
          dc: $(Build.SourcesDirectory)/models/risk-model/score/aks_deployment_config.yml
