parameters:
  rm_service_connection: ''
  service_name: ''
  workspace: ''
  resource_group: ''
  model_name: ''
  model_version: ''
  aks_cluster: ''
  inference_config: ''
  deployment_config: ''
  overwrite: false

jobs:
  - job: DeployToAKS

    variables:
      default_inference_config: models/${{ parameters.model_name }}/score/inference_config.yml
      inference_config_var: ${{ coalesce(parameters.inference_config ,  variables.default_inference_config) }}
      # source directory
      default_deployment_config: models/${{ parameters.model_name }}/score/aks_deployment_config.yml
      deployment_config_var: ${{ coalesce(parameters.deployment_config ,  variables.default_deployment_config) }}

      model_id: ${{ parameters.model_name }}:${{ parameters.model_version }}

      overwrite_cli: ' '
      ${{ if eq(variables.overwrite_cli, 'true') }}:
        overwrite_cli: '--overwrite'

    steps:
      - task: AzureCLI@2
        displayName: 'Install the CLI'
        inputs:
          scriptType: bash
          azureSubscription: ${{ parameters.rm_service_connection }}
          scriptLocation: inlineScript
          inlineScript: 'az extension add -n azure-cli-ml'

      - task: AzureCLI@1
        displayName: 'Deploy the model to AKS'
        inputs:
          azureSubscription: ${{ parameters.rm_service_connection }}
          scriptLocation: inlineScript
          inlineScript: az ml model deploy -n ${{ parameters.service_name }} -m $(model_id) --ct ${{ parameters.aks_cluster }} --ic  ${{ variables.inference_config_var }} --dc  ${{ variables.deployment_config_var }} --workspace-name ${{ parameters.workspace }} --resource-group ${{ parameters.resource_group }} $[overwrite_cli]