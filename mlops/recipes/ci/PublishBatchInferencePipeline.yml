#NOTE: This is a fix until CLI support is released for batch inference. For python program to look up workspace
#we need to define the following variables in Azure Devops under MLOPSVG Variable group:
#SUBSCRIPTION_ID, TENANT_ID, SP_APP_ID, SP_APP_SECRET

parameters:
  rm-service-connection: ''
  workspace-name: ''
  resource-group: ''
  aml-pipeline-yml-path: ''
  aml-pipeline-name: ''
  run-pipeline: ''
  experiment-name: '' #This needs to be passed only when run-pipeline is true

jobs:
  - job: BatchInferencePipelinePublish
    steps:
    - task: AzureCLI@2
      displayName: 'Install the CLI'
      inputs:
        scriptType: bash
        azureSubscription: ${{ parameters['rm-service-connection'] }}
        scriptLocation: inlineScript
        inlineScript: 'az extension add -n azure-cli-ml'

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.6'

    - script: pip install azureml-sdk azureml-contrib-pipeline-steps python-dotenv
      displayName: 'Install libraries'

    - bash: python -m models.utils.batch_inference.publish_batch_inf_pipeline --AML_PIPELINE_YML_PATH ${{ parameters['aml-pipeline-yml-path'] }} --AML_PIPELINE_NAME ${{ parameters['aml-pipeline-name'] }}
      name: publishScript
      workingDirectory: $(Build.SourcesDirectory)
      displayName: 'Publish Batch Inference Pipeline'

  - job: RunPipelineJob
    dependsOn: BatchInferencePipelinePublish
    condition: eq(${{ parameters['run-pipeline'] }}, true)
    variables:
      pipe_id: $[ dependencies.BatchInferencePipelinePublish.outputs['publishScript.PIPELINE_ID'] ]
    steps:
    - template: ../../recipes/cd/RunPipeline.yml
      parameters:
        rm-service-connection: ${{ parameters['rm-service-connection'] }}
        workspace-name: ${{ parameters['workspace-name'] }}
        resource-group: ${{ parameters['resource-group'] }}
        pipeline-id: '$(pipe_id)'
        experiment-name: ${{ parameters['experiment-name'] }}