parameters:
  rm_service_connection: ''
  workspace: ''
  resource_group: ''
  model_name: ''
  aml_compute_cluster: ''
  dataset_name: ''
  conda_dependencies_file: ''
  source_directory: ''
  entry_script: ''
  run_metadata_artifact: 'run-metadata'

jobs:
  - job: TrainJob
    displayName: Training in Azure ML Compute
    variables:
      default_conda_dependencies_file: models/${{ parameters.model_name }}/train/conda_dependencies.yml
      conda_dependencies_file_var: ${{ coalesce(parameters.conda_dependencies_file ,  variables.default_conda_dependencies_file) }}
      # source directory
      default_source_directory: models/${{ parameters.model_name }}/train
      default_source_directory_var: ${{ coalesce(parameters.source_directory ,  variables.default_source_directory) }}
      # source directory
      default_entry_script: models/${{ parameters.model_name }}/train.py
      default_entry_script_var: ${{ coalesce(parameters.entry_script ,  variables.default_entry_script) }}

    steps:
      - task: AzureCLI@1
        displayName: 'Install the CLI'
        inputs:
          azureSubscription: ${{ parameters.rm_service_connection }}
          scriptLocation: inlineScript
          inlineScript: 'az extension add -n azure-cli-ml'

      - task: AzureCLI@1
        displayName: 'Run training'
        inputs:
          azureSubscription: ${{ parameters.rm_service_connection }}
          scriptLocation: inlineScript
          inlineScript: 'az ml run submit-script --workspace-name ${{ parameters.workspace }} --resource-group ${{ parameters.resource_group }} -e ${{ parameters.model_name }}-experiment -d ${{ variables.conda_dependencies_file_var }} --ct ${{ parameters.aml_compute_cluster }} --source-directory ${{ variables.source_directory_var }} -t run.json ${{ variables.entry_script_var }} --MODEL_NAME ${{ parameters.model_name }} --DATASET_NAME ${{ parameters.dataset_name }}'

      - publish: $(System.DefaultWorkingDirectory)/run.json
        displayName: Publish run metadata artifact
        artifact: ${{ parameters.run_metadata_artifact }}